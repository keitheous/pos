!!!
%html
  %head
    %meta{:content => "width=device-width", :name => "viewport"}/
    :css

  %body
    %header
      %dl
        - if @email.respond_to?(:smtp_envelope_from) && Array(@email.from) != Array(@email.smtp_envelope_from)
          %dt SMTP-From:
          %dd= @email.smtp_envelope_from
        - if @email.respond_to?(:smtp_envelope_to) && @email.to != @email.smtp_envelope_to
          %dt SMTP-To:
          %dd= @email.smtp_envelope_to
        %dt From:
        %dd= @email.header['from']
        - if @email.reply_to
          %dt Reply-To:
          %dd= @email.header['reply-to']
        %dt To:
        %dd= @email.header['to']
        - if @email.cc
          %dt CC:
          %dd= @email.header['cc']
        %dt Date:
        %dd= Time.current.rfc2822
        %dt Subject:
        %dd
          %strong= @email.subject
        - unless @email.attachments.nil? || @email.attachments.empty?
          %dt Attachments:
          %dd
            - @email.attachments.each do |a|
              - filename = a.respond_to?(:original_filename) ? a.original_filename : a.filename
              = link_to filename, "data:application/octet-stream;charset=utf-8;base64,#{Base64.encode64(a.body.to_s)}", download: filename
        - if @email.multipart?
          %dd
            %select{:onchange => "formatChanged(this);"}
              %option request.format == Mime[:html] ? 'selected' : ''  value="?part=text%2Fhtml"&gt;View as HTML email
              %option request.format == Mime[:text] ? 'selected' : ''  value="?part=text%2Fplain"&gt;View as plain-text email
    - if @part && @part.mime_type
      %iframe{:name => "messageBody", :seamless => "", :src => "?part=#{Rack::Utils.escape(@part.mime_type)}"}
    - else
      %p
        You are trying to preview an email that does not have any content.
        This is probably because the
        %em mail
        method has not been called in
        = succeed "." do
          %em
            = @preview.preview_name
            \##{@email_action}
    :javascript
      function formatChanged(form) {
        var part_name = form.options[form.selectedIndex].value
        var iframe =document.getElementsByName('messageBody')[0];
        iframe.contentWindow.location.replace(part_name);

        if (history.replaceState) {
          var url    = location.pathname.replace(/\.(txt|html)$/, '');
          var format = /html/.test(part_name) ? '.html' : '.txt';
          window.history.replaceState({}, '', url + format);
        }
      }
